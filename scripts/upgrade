#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

# TODO: handle "/home/ynh$app" to final_path migration

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
final_path=$(ynh_app_setting_get $app final_path)
port=$(ynh_app_setting_get $app port)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

# If final_path doesn't exist, create it
if [ -z $final_path ]; then
	final_path=/var/www/$app
	ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
# ynh_backup_before_upgrade
# ynh_clean_setup () {
	# restore it if the upgrade fails
# 	ynh_restore_upgradebackup
# }

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path $path_url)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies dh-autoreconf \
	python-pip python-dev python-lxml python-imaging python-virtualenv

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"
mkdir -p "$final_path/data"

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create "$app"


#=================================================
# SPECIFIC UPGRADE
#=================================================
# Install nodesjs
#=================================================

# install nodejs
ynh_install_nodejs 8

#=================================================
# Install weboob with pip
#=================================================

virtualenv "${final_path}/venv"
(
	set +o nounset
	source "${final_path}/venv/bin/activate"
	set -o nounset

	pip install --upgrade pip
	pip install weboob
)

#=================================================
# Install Kresus with npm
#=================================================

ynh_use_nodejs
(
	cd "$final_path"
	chown -R $app: "$final_path"
	npm install --unsafe-perm
	npm run build:prod
)

#=================================================
# CONFIGURE HASTE
#=================================================

cp ../conf/config.ini "$final_path/config.ini"

ynh_replace_string "__PORT__"          "$port"       "$final_path/config.ini"
ynh_replace_string "__PATH__"          "$path_url"   "$final_path/config.ini"
ynh_replace_string "__FINALPATH__"     "$final_path" "$final_path/config.ini"

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/config.ini"

#=================================================
# SETUP SYSTEMD
#=================================================

ynh_replace_string "__NODEJS__"   "$nodejs_use_version"       ../conf/systemd.service
ynh_replace_string "__ENV_PATH__" "$PATH"                     ../conf/systemd.service
ynh_replace_string "__NODEPATH__" "$(dirname "$nodejs_path")" ../conf/systemd.service

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set right permissions for curl installation
chown -R $app: $final_path
chmod 600 "$final_path/config.ini"

#=================================================
# RELOAD NGINX
#=================================================

service "$app" restart
systemctl reload nginx
